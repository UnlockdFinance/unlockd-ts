const marketInterface: string[] = [
  'function DOMAIN_SEPARATOR() view returns (bytes32)',
  'function bid(bytes32 orderId, uint128 amountToPay, uint128 amountOfDebt, ((bytes32 loanId, uint256 aggLoanPrice, uint256 aggLtv, uint256 aggLiquidationThreshold, uint88 totalAssets, uint256 nonce, uint256 deadline) loan, bytes32 assetId, address collection, uint256 tokenId, uint256 assetPrice, uint256 assetLtv, uint256 nonce, uint256 deadline) signMarket, (uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig)',
  'function buyNow(bool claimOnUWallet, bytes32 orderId, uint256 amountToPay, uint256 amountOfDebt, ((bytes32 loanId, uint256 aggLoanPrice, uint256 aggLtv, uint256 aggLiquidationThreshold, uint88 totalAssets, uint256 nonce, uint256 deadline) loan, bytes32 assetId, address collection, uint256 tokenId, uint256 assetPrice, uint256 assetLtv, uint256 nonce, uint256 deadline) signMarket, (uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig)',
  'function calculateDigest(uint256 nonce, ((bytes32 loanId, uint256 aggLoanPrice, uint256 aggLtv, uint256 aggLiquidationThreshold, uint88 totalAssets, uint256 nonce, uint256 deadline) loan, bytes32 assetId, address collection, uint256 tokenId, uint256 assetPrice, uint256 assetLtv, uint256 nonce, uint256 deadline) signMarket) view returns (bytes32 digest)',
  'function cancel(bytes32 orderId)',
  'function cancelClaim(bytes32 orderId, ((bytes32 loanId, uint256 aggLoanPrice, uint256 aggLtv, uint256 aggLiquidationThreshold, uint88 totalAssets, uint256 nonce, uint256 deadline) loan, bytes32 assetId, address collection, uint256 tokenId, uint256 assetPrice, uint256 assetLtv, uint256 nonce, uint256 deadline) signMarket, (uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig)',
  'function claim(bool claimOnUWallet, bytes32 orderId, ((bytes32 loanId, uint256 aggLoanPrice, uint256 aggLtv, uint256 aggLiquidationThreshold, uint88 totalAssets, uint256 nonce, uint256 deadline) loan, bytes32 assetId, address collection, uint256 tokenId, uint256 assetPrice, uint256 assetLtv, uint256 nonce, uint256 deadline) signMarket, (uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig)',
  'function create(address underlyingAsset, uint8 orderType, (uint128 startAmount, uint128 endAmount, uint40 startTime, uint40 endTime, uint128 debtToSell) config, ((bytes32 loanId, uint256 aggLoanPrice, uint256 aggLtv, uint256 aggLiquidationThreshold, uint88 totalAssets, uint256 nonce, uint256 deadline) loan, bytes32 assetId, address collection, uint256 tokenId, uint256 assetPrice, uint256 assetLtv, uint256 nonce, uint256 deadline) signMarket, (uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig)',
  'function getBuyNowPrice(bytes32 orderId, address underlyingAsset, uint256 aggLoanPrice, uint256 aggLtv) view returns (uint256 amount)',
  'function getMinBidPrice(bytes32 orderId, address underlyingAsset, uint256 aggLoanPrice, uint256 aggLtv) view returns (uint256 minBid)',
  'function getNonce(address sender) view returns (uint256)',
  'function getOrder(bytes32 orderId) view returns ((bytes32 orderId, address owner, uint8 orderType, uint88 countBids, uint256 bidderDebtPayed, uint256 bidderBonus, (bytes32 loanId, bytes32 assetId, uint128 startAmount, uint128 endAmount, uint128 debtToSell) offer, (uint40 startTime, uint40 endTime) timeframe, (bytes32 loanId, address buyer, uint128 amountToPay, uint128 amountOfDebt) bid))',
  'function moduleId() view returns (uint256)',
  'function moduleVersion() view returns (bytes32)',
  'event Genesis()',
  'event InstallerInstallModule(uint256 indexed moduleId, address indexed moduleImpl, bytes32 moduleVersion)',
  'event MarketBid(bytes32 indexed loanId, bytes32 indexed orderId, bytes32 indexed assetId, uint256 amountToPay, uint256 amountOfDebt, uint256 amount, address user)',
  'event MarketBuyNow(bytes32 indexed loanId, bytes32 indexed orderId, bytes32 indexed assetId, uint256 amount, address user)',
  'event MarketCancelAuction(bytes32 indexed loanId, bytes32 indexed orderId, address owner)',
  'event MarketCancelBid(bytes32 indexed loanId, bytes32 indexed orderId, bytes32 indexed assetId, uint256 amount, address user)',
  'event MarketClaim(bytes32 indexed loanId, bytes32 indexed orderId, bytes32 indexed assetId, uint256 amount, address bidder, address receiver, address user)',
  'event MarketCreated(bytes32 indexed loanId, bytes32 indexed orderId, bytes32 indexed assetId, address collection, uint256 tokenId)',
  'event ProxyCreated(address indexed proxy, uint256 moduleId)',
  'error AmountExceedsDebt()',
  'error AmountToLow()',
  'error AssetLocked()',
  'error DebtExceedsAmount()',
  'error InvalidCurrentLiquidationThreshold()',
  'error InvalidCurrentLtv()',
  'error InvalidEndAmount()',
  'error InvalidEndTime()',
  'error InvalidLoanId()',
  'error InvalidLoanOwner()',
  'error InvalidOrderBuyer()',
  'error InvalidOrderId()',
  'error InvalidOrderOwner()',
  'error InvalidParams()',
  'error InvalidRecoveredAddress()',
  'error InvalidStartAmount()',
  'error InvalidStartTime()',
  'error InvalidTotalAmount()',
  'error InvalidUnderlyingAsset()',
  'error LoanBlocked()',
  'error LoanNotActive()',
  'error LoanNotUpdated()',
  'error NotAssetOwner()',
  'error NotEqualDeadline()',
  'error NotEqualOrderOwner()',
  'error NotValidReserve()',
  'error OrderNotAllowed()',
  'error ProtocolOwnerZeroAddress()',
  'error SenderZeroAddress()',
  'error TimestampExpired()',
  'error UnhealtyLoan()',
  'error UnlockdWalletNotFound()',
  'error WrongNonce()',
  'error ZeroAddress()'
] as const

export default marketInterface
